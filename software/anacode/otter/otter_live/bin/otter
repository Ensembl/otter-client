#!/bin/bash

# the installation script will append the proper values to these lines
otter_installed=true

unset CDPATH

# load the standard environment unless 
# * this a checkout, not an installation
# * $OTTER_HOME is set
if $otter_installed || [ -z "$OTTER_HOME" ] ; then
    # Bear in mind,
    #   on Mac we have BSD readlink which takes no options
    #   on internal Linux we have a two-hop symlink
    #     $swac/bin/otter -> $swac/otter/{otter_live -> otter_relX.Y}/bin/otter
    #     and we want to resolve all links to reduce load on NFS
    if the_real_me="$( readlink -f "$0" 2>/dev/null )"; then
        # Canonicalised: all links resolved
        OTTER_RAN_AS="$0 -> $( readlink -n "$0" ) -> $the_real_me"
        . "$( dirname "$the_real_me" )/_otter_env_core.sh"         
    else
        # "readlink -f" doesn't work.  Probably MacOS, so
        # assume there is no symlink involved in startup.
        my_dir="$( dirname "$0" )"
        my_real_dir="$( cd "${my_dir}" 2>/dev/null && pwd -P )"
        if [ -z "${my_real_dir}" ] ; then
            my_real_dir="${my_dir}"
            
        fi
        OTTER_RAN_AS="$0 -> $my_real_dir"
        . "${my_real_dir}/_otter_env_core.sh"
        
    fi
fi

# exported as an optional hint, for the benefit of LogWindow
export OTTER_RAN_AS

# sanity check
if [ -z "$OTTER_HOME" ]
then
    echo "This script has been improperly installed!  Consult the developers!" >&2
    exit 1
fi

if [ "$1" = '-S' ]; then
    # Start a subshell - for dev or debug.
    # Tell the prompt what was used to construct its %ENVironment.
    source "$ensembl_otter_home/dev/subshell.sh"
    echo "test1"
    # calls exec, does not return
else
    exec perl "$ensembl_otter_home/tk/otter" "$@" #-d:NYTProf
    echo "test2"
fi
